{"version":3,"sources":["context/reducer.js","utility/constant.js","utility/service.js","context/ApplicationContext.js","component/HeaderComponent.js","component/FilterComponent.js","component/NewsContentComponent.js","component/ContentComponent.js","App.js","reportWebVitals.js","index.js"],"names":["applicationReducer","state","action","type","searchText","value","country","filter","loading","news","activeLink","date","Error","SERVICEURL","ALLSTORIES","TOPSTORIES","SERVICEKEY","fetchData","params","a","header","method","headers","fetch","then","res","json","status","articles","totalResults","catch","error","data","ApplicationState","createContext","ApplicationDispatch","ApplicationContext","children","applicationState","startDate","Date","endDate","sortBy","useReducer","dispatch","getNews","useEffect","urlParameters","Object","entries","map","e","encodeURIComponent","month","getMonth","day","getDate","getFullYear","getDateFormat","join","Provider","HeaderComponent","useContext","searchRef","useRef","useLayoutEffect","displayClock","toDateString","toLocaleTimeString","setTimeout","handleClick","preventDefault","className","onSubmit","target","ref","name","required","onChange","toLowerCase","defaultValue","keys","countryList","o","i","onClick","href","FilterComponent","total","handleFilter","props","selectionRange","key","color","autofocus","stopPropagation","setHideDate","hideDate","ranges","selection","newFilter","onShownDateChange","console","log","inputRanges","staticRanges","NewsContentComponent","obj","rel","url","title","description","author","publishedAt","ContentComponent","useState","contentClass","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc527896.chunk.js","sourcesContent":["function applicationReducer(state, action) {  \n    switch (action.type) {\n      case 'updateText':{\n        return {\n          ...state,\n          searchText : action.value\n        }\n      }\n      case 'setCountry':{\n        return {\n          ...state,\n          country:action.value\n        }\n      }\n      case 'updatefilter':{\n        return {\n          ...state,\n          filter: {...action.value}\n        }\n      }\n      case 'getNews':{\n        return {\n          ...state,\n          loading:true\n        }\n      }\n      case 'updateNews':{\n        return {\n          ...state,\n          news:action.value,\n          loading:false\n        }\n      }\n      case 'selectedLink':{\n        return {\n          ...state,\n          activeLink : action.value\n        }\n      }\n      case 'updateTime':{\n        return {\n          ...state,\n          date:action.value\n        }\n      }\n      default: {\n        throw new Error(`Unhandled action type: ${action.type}`)\n      }\n    }\n}\n\nexport default applicationReducer;","export const SERVICEURL = 'https://newsapi.org/v2/';\nexport const ALLSTORIES = 'everything';\nexport const TOPSTORIES = 'top-headlines';\nexport const SERVICEKEY = '51c68fa9e1374de391e7e6e766e732a3';\nexport const sort = {\n    'publishedAt': ''\n}\nexport const publishedAt = 'publishedAt';","import { SERVICEURL, SERVICEKEY } from '../utility/constant';\n\nexport async function fetchData(params){\n    const header = {\n        ...params,\n        method:'GET',\n        headers:{\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"X-Api-Key\": SERVICEKEY\n        }\n    }\n    const data = await fetch(`${SERVICEURL}${params}`, header)\n          .then(res=>res.json())\n          .then(res=>{\n              const {status, articles, totalResults} = res;\n              if(status==='ok'){\n                return {articles,totalResults};\n              }\n              throw new Error('Some issues');\n          })\n          .catch(error=>{\n              throw error;\n          });\n    return data;\n}","import {createContext, useEffect, useReducer} from 'react';\nimport applicationReducer from'src/context/reducer';\nimport {fetchData} from 'src/utility/service';\nimport {TOPSTORIES, publishedAt} from \"src/utility/constant\"\n\nconst ApplicationState = createContext();\nconst ApplicationDispatch = createContext();\n\nconst ApplicationContext = ({children})=>{\n    const applicationState={\n        searchText:'',\n        date:'',\n        activeLink:TOPSTORIES,\n        country:'in',\n        news:{},\n        loading:true,\n        filter:{\n            startDate: new Date(),\n            endDate: new Date(),\n            sortBy:publishedAt\n        }\n    }\n    const [state, dispatch] = useReducer(applicationReducer, {...applicationState});\n\n    const getDateFormat = params => {\n        const date = new Date(params);\n        const month = date.getMonth()<10 ? `0${date.getMonth()}`:date.getMonth();\n        const day = date.getDate()<10 ? `0${date.getDate()}`:date.getDate();\n        return `${date.getFullYear()}-${month}-${day}`\n    }\n\n    const getNews = params =>{\n        dispatch({type:'getNews'})\n        fetchData(`${state.activeLink}?country=${params}`)\n        .then(res=>{\n            dispatch({type:'updateNews', value:{...res}})\n        })\n        .catch(error=>{\n            dispatch({type:'updateNews', value:[]})\n        })\n    }\n\n    useEffect(()=>{\n        getNews('in');\n    },[]);\n\n    useEffect(()=>{\n        debugger;\n        let urlParameters = Object.entries(state.filter).map(e => {\n            if(typeof e[1] ===\"object\"){\n                return `${e[0]}=${encodeURIComponent(getDateFormat(new Date(e[1])   ))}`\n            }\n            return `${e[0]}=${e[1]}`;\n        }).join('&');\n        getNews(`${state.country}&${urlParameters}`);\n    },[state.country, state.activeLink, state.filter]);\n\n    return (\n        <ApplicationState.Provider value={state}>\n            <ApplicationDispatch.Provider value={dispatch}>\n                {children}\n            </ApplicationDispatch.Provider>\n        </ApplicationState.Provider>\n    )\n}\n\nexport {ApplicationContext,ApplicationDispatch, ApplicationState};","import { useRef, useLayoutEffect, useContext } from 'react';\nimport {ApplicationState, ApplicationDispatch} from 'src/context/ApplicationContext';\nimport {TOPSTORIES, ALLSTORIES} from \"src/utility/constant\"\n \nimport countryList from 'src/utility/countrylist.json';\nimport {fetchData} from 'src/utility/service'\n\nconst HeaderComponent = () => {\n    const {activeLink, date, country} = useContext(ApplicationState);\n    const dispatch = useContext(ApplicationDispatch);\n    const searchRef = useRef();\n\n    useLayoutEffect(()=>{\n        displayClock();\n    },[])\n\n    const displayClock=()=>{\n        let date = new Date();\n        dispatch({type:'updateTime', 'value':`${date.toDateString()} ${date.toLocaleTimeString()}`});\n        setTimeout(displayClock, 1000); \n    }\n\n    const onChangeCountry=params=>{\n        dispatch({type:'setCountry', 'value':(params.target.value).toLowerCase()});\n    }\n\n    const handleClick = (params,e)=>{\n        dispatch({type:\"selectedLink\", value:params});\n        e.preventDefault();\n    }\n\n    const handleSubmit = e =>{\n        const value = e.target[\"search\"].value;\n        dispatch({type:\"updateText\", value});\n        fetchData(`${activeLink}?country=${country}&q=${encodeURIComponent(value)}`)\n        .then(res=>dispatch({type:\"updateNews\",value:{...res}}));\n        e.preventDefault();\n    }\n\n    return (<header className=\"header\">\n                <span>News Every Minute!!</span>\n                <span>{date}</span>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <input ref={searchRef} type=\"text\" name=\"search\" required/>\n                        <button type=\"submit\">Search!</button>  \n                    </div>\n                </form> \n                <div className=\"country-wrapper\">\n                    You are in \n                <select name=\"country\" onChange={onChangeCountry} defaultValue=\"IN\">\n                    {\n                        Object.keys(countryList).map((o,i)=>(\n                        <option key={i} value={o}>{countryList[o]}</option>\n                        ))\n                    }\n                </select>\n                </div>\n                <a className={(activeLink===TOPSTORIES && 'active')||''} onClick={e=>handleClick(TOPSTORIES,e)} href=\"!#\">Top Stories</a>\n                <a className={(activeLink===ALLSTORIES && 'active')||''} onClick={e=>handleClick(ALLSTORIES,e)} href=\"!#\">All</a>\n           </header>)\n} \n\nexport default HeaderComponent;","import { DateRangePicker } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nconst FilterComponent = ({ total, endDate, startDate, sortBy, handleFilter, ...props }) => {\n\n    const selectionRange = {\n        startDate,\n        endDate,\n        key: 'selection',\n        color: 'orange',\n        autofocus: false,\n    }\n\n    const handleSortChange = params => {\n        handleFilter({ 'sortBy': params.target.value });\n        params.preventDefault();\n        params.stopPropagation();\n    }\n    const handleDateButtonClick = params => {\n        props.setHideDate(!props.hideDate);\n        params.stopPropagation();\n    }\n    const handleSelect = ({ selection }) => {\n        const newFilter = { endDate, startDate };\n        if (startDate !== selection.startDate || endDate !== selection.endDate) {\n            newFilter.startDate = selection.startDate;\n            newFilter.endDate = selection.endDate;\n            handleFilter({ ...newFilter });\n        }\n    }\n\n    return (\n        <div className=\"filter\">\n            <div className=\"sort-order menu\">\n                Sort By:\n                <select name=\"sort\" onChange={handleSortChange} defaultValue={sortBy}>\n                    <option value=\"relevancy\">Relevant</option>\n                    <option value=\"popularity\">Popular</option>\n                    <option value=\"publishedAt\">Publish Date</option>\n                </select>\n            </div>\n            <div className=\"result-count menu\">\n                Total Number: {total}\n            </div>\n            <div className=\"calendar-wrapper menu\">\n                Date:\n                <button className=\"date-open\" type=\"click\" onClick={handleDateButtonClick}>\n                   {(props.hideDate && \n                     `${(selectionRange.startDate).toDateString()} to ${(selectionRange.endDate).toDateString()}`)\n                    ||'Close Calendar'     \n                   }\n                </button>\n                <DateRangePicker\n                    className={`calendar ${props.hideDate && 'hide' || ''}`}\n                    ranges={[selectionRange]}\n                    color=\"orange\"\n                    onChange={handleSelect}\n                    onShownDateChange={e=>{console.log(e,'te'); debugger}}\n                    inputRanges={[]}\n                    staticRanges={[]}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default FilterComponent;","\nconst NewsContentComponent = ({news})=>{\n    return (<>\n        {news && news.map((obj,key)=>(\n            <div key={`news-${key}`} className=\"card\">\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={obj.url}>\n                <div >\n                    <h3>{obj.title}</h3>\n                    <p>{obj.description}</p>\n                    <p>\n                        {(obj.author && (<span>Pubished by:{obj.author}</span>))||null}\n                        <span>Published on :{(new Date(obj.publishedAt)).toDateString()}</span>\n                    </p>\n                </div>\n                </a>\n            </div>\n        ))}\n    </>)\n}\n\nexport default NewsContentComponent;","import { useContext, useState } from 'react';\nimport {ApplicationState, ApplicationDispatch} from 'src/context/ApplicationContext';\nimport FilterComponent from 'src/component/FilterComponent';\nimport NewsContentComponent from 'src/component/NewsContentComponent';\n\nconst ContentComponent = () =>{\n\n    const {news={}, loading, filter} = useContext(ApplicationState);\n    const [hideDate, setHideDate] = useState(true);\n    const dispatch = useContext(ApplicationDispatch);\n    let contentClass = \"content\";\n    \n    if(loading || !news.articles || news.articles.length==0){\n        contentClass+= \" hidden\";\n    }\n\n    const handleFilter = params =>{\n        dispatch({type:'updatefilter',value:{...filter,...params}});\n    }\n\n    return <div className={contentClass}>\n        <FilterComponent \n            total={news.totalResults||0} \n            {...filter} \n            handleFilter={handleFilter}\n            hideDate={hideDate}\n            setHideDate={setHideDate}/>\n            \n        {(!loading && news.articles && news.articles.length>0 && \n        <NewsContentComponent news={news.articles}/>)||\n        (loading && <div className=\"spinner-box\">\n                        <div className=\"circle-border\">\n                            <div className=\"circle-core\"></div>\n                        </div>\n                    </div>)||\n        <div className=\"no-news\">\n            <h2>No News found for given filters!!</h2> \n            <span>Try with resetting the filters</span>   \n        </div>}\n        \n    </div>\n} \n\nexport default ContentComponent;","import {ApplicationContext} from \"src/context/ApplicationContext\";\nimport HeaderComponent from \"src/component/HeaderComponent\";\nimport ContentComponent from \"src/component/ContentComponent\";\n\nimport 'src/styles/index.scss';\n\nfunction App() {\n  return (\n    <ApplicationContext>\n      <HeaderComponent/>\n      <ContentComponent/>\n    </ApplicationContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
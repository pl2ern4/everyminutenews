[{"/home/prerna/news-every-minute/my-app/src/index.js":"1","/home/prerna/news-every-minute/my-app/src/reportWebVitals.js":"2","/home/prerna/news-every-minute/my-app/src/App.js":"3","/home/prerna/news-every-minute/my-app/src/component/HeaderComponent.js":"4","/home/prerna/news-every-minute/my-app/src/component/ContentComponent.js":"5","/home/prerna/news-every-minute/my-app/src/context/ApplicationContext.js":"6","/home/prerna/news-every-minute/my-app/src/context/reducer.js":"7","/home/prerna/news-every-minute/my-app/src/utility/service.js":"8","/home/prerna/news-every-minute/my-app/src/utility/constant.js":"9","/home/prerna/news-every-minute/my-app/src/component/FilterComponent.js":"10","/home/prerna/news-every-minute/my-app/src/component/NewsContentComponent.js":"11"},{"size":501,"mtime":1612187614195,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1612183572539,"results":"14","hashOfConfig":"13"},{"size":383,"mtime":1612274958143,"results":"15","hashOfConfig":"13"},{"size":2487,"mtime":1612275011303,"results":"16","hashOfConfig":"13"},{"size":1561,"mtime":1612275048351,"results":"17","hashOfConfig":"13"},{"size":2121,"mtime":1612275082199,"results":"18","hashOfConfig":"13"},{"size":1018,"mtime":1612253114335,"results":"19","hashOfConfig":"13"},{"size":746,"mtime":1612198708357,"results":"20","hashOfConfig":"13"},{"size":285,"mtime":1612250758404,"results":"21","hashOfConfig":"13"},{"size":2479,"mtime":1612260941766,"results":"22","hashOfConfig":"13"},{"size":693,"mtime":1612254166340,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"o6zioj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/prerna/news-every-minute/my-app/src/index.js",[],["52","53"],"/home/prerna/news-every-minute/my-app/src/reportWebVitals.js",[],"/home/prerna/news-every-minute/my-app/src/App.js",[],"/home/prerna/news-every-minute/my-app/src/component/HeaderComponent.js",["54"],"import { useRef, useLayoutEffect, useContext } from 'react';\nimport {ApplicationState, ApplicationDispatch} from 'src/context/ApplicationContext';\nimport {TOPSTORIES, ALLSTORIES} from \"src/utility/constant\"\n \nimport countryList from 'src/utility/countrylist.json';\nimport {fetchData} from 'src/utility/service'\n\nconst HeaderComponent = () => {\n    const {activeLink, date, country} = useContext(ApplicationState);\n    const dispatch = useContext(ApplicationDispatch);\n    const searchRef = useRef();\n\n    useLayoutEffect(()=>{\n        displayClock();\n    },[])\n\n    const displayClock=()=>{\n        let date = new Date();\n        dispatch({type:'updateTime', 'value':`${date.toDateString()} ${date.toLocaleTimeString()}`});\n        setTimeout(displayClock, 1000); \n    }\n\n    const onChangeCountry=params=>{\n        dispatch({type:'setCountry', 'value':(params.target.value).toLowerCase()});\n    }\n\n    const handleClick = (params,e)=>{\n        dispatch({type:\"selectedLink\", value:params});\n        e.preventDefault();\n    }\n\n    const handleSubmit = e =>{\n        const value = e.target[\"search\"].value;\n        dispatch({type:\"updateText\", value});\n        fetchData(`${activeLink}?country=${country}&q=${encodeURIComponent(value)}`)\n        .then(res=>dispatch({type:\"updateNews\",value:{...res}}));\n        e.preventDefault();\n    }\n\n    return (<header className=\"header\">\n                <span>News Every Minute!!</span>\n                <span>{date}</span>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <input ref={searchRef} type=\"text\" name=\"search\" required/>\n                        <button type=\"submit\">Search!</button>  \n                    </div>\n                </form> \n                <div className=\"country-wrapper\">\n                    You are in \n                <select name=\"country\" onChange={onChangeCountry} defaultValue=\"IN\">\n                    {\n                        Object.keys(countryList).map((o,i)=>(\n                        <option key={i} value={o}>{countryList[o]}</option>\n                        ))\n                    }\n                </select>\n                </div>\n                <a className={(activeLink===TOPSTORIES && 'active')||''} onClick={e=>handleClick(TOPSTORIES,e)} href=\"!#\">Top Stories</a>\n                <a className={(activeLink===ALLSTORIES && 'active')||''} onClick={e=>handleClick(ALLSTORIES,e)} href=\"!#\">All</a>\n           </header>)\n} \n\nexport default HeaderComponent;","/home/prerna/news-every-minute/my-app/src/component/ContentComponent.js",["55"],"import { useContext, useState } from 'react';\nimport {ApplicationState, ApplicationDispatch} from 'src/context/ApplicationContext';\nimport FilterComponent from 'src/component/FilterComponent';\nimport NewsContentComponent from 'src/component/NewsContentComponent';\n\nconst ContentComponent = () =>{\n\n    const {news={}, loading, filter} = useContext(ApplicationState);\n    const [hideDate, setHideDate] = useState(true);\n    const dispatch = useContext(ApplicationDispatch);\n    let contentClass = \"content\";\n    \n    if(loading || !news.articles || news.articles.length==0){\n        contentClass+= \" hidden\";\n    }\n\n    const handleFilter = params =>{\n        dispatch({type:'updatefilter',value:{...filter,...params}});\n    }\n\n    return <div className={contentClass}>\n        <FilterComponent \n            total={news.totalResults||0} \n            {...filter} \n            handleFilter={handleFilter}\n            hideDate={hideDate}\n            setHideDate={setHideDate}/>\n            \n        {(!loading && news.articles && news.articles.length>0 && \n        <NewsContentComponent news={news.articles}/>)||\n        (loading && <div className=\"spinner-box\">\n                        <div className=\"circle-border\">\n                            <div className=\"circle-core\"></div>\n                        </div>\n                    </div>)||\n        <div className=\"no-news\">\n            <h2>No News found for given filters!!</h2> \n            <span>Try with resetting the filters</span>   \n        </div>}\n        \n    </div>\n} \n\nexport default ContentComponent;","/home/prerna/news-every-minute/my-app/src/context/ApplicationContext.js",["56","57"],"import {createContext, useEffect, useReducer} from 'react';\nimport applicationReducer from'src/context/reducer';\nimport {fetchData} from 'src/utility/service';\nimport {TOPSTORIES, publishedAt} from \"src/utility/constant\"\n\nconst ApplicationState = createContext();\nconst ApplicationDispatch = createContext();\n\nconst ApplicationContext = ({children})=>{\n    const applicationState={\n        searchText:'',\n        date:'',\n        activeLink:TOPSTORIES,\n        country:'in',\n        news:{},\n        loading:true,\n        filter:{\n            startDate: new Date(),\n            endDate: new Date(),\n            sortBy:publishedAt\n        }\n    }\n    const [state, dispatch] = useReducer(applicationReducer, {...applicationState});\n\n    const getDateFormat = params => {\n        const date = new Date(params);\n        const month = date.getMonth()<10 ? `0${date.getMonth()}`:date.getMonth();\n        const day = date.getDate()<10 ? `0${date.getDate()}`:date.getDate();\n        return `${date.getFullYear()}-${month}-${day}`\n    }\n\n    const getNews = params =>{\n        dispatch({type:'getNews'})\n        fetchData(`${state.activeLink}?country=${params}`)\n        .then(res=>{\n            dispatch({type:'updateNews', value:{...res}})\n        })\n        .catch(error=>{\n            dispatch({type:'updateNews', value:[]})\n        })\n    }\n\n    useEffect(()=>{\n        getNews('in');\n    },[]);\n\n    useEffect(()=>{\n        debugger;\n        let urlParameters = Object.entries(state.filter).map(e => {\n            if(typeof e[1] ===\"object\"){\n                return `${e[0]}=${encodeURIComponent(getDateFormat(new Date(e[1])   ))}`\n            }\n            return `${e[0]}=${e[1]}`;\n        }).join('&');\n        getNews(`${state.country}&${urlParameters}`);\n    },[state.country, state.activeLink, state.filter]);\n\n    return (\n        <ApplicationState.Provider value={state}>\n            <ApplicationDispatch.Provider value={dispatch}>\n                {children}\n            </ApplicationDispatch.Provider>\n        </ApplicationState.Provider>\n    )\n}\n\nexport {ApplicationContext,ApplicationDispatch, ApplicationState};","/home/prerna/news-every-minute/my-app/src/context/reducer.js",[],"/home/prerna/news-every-minute/my-app/src/utility/service.js",[],["58","59"],"/home/prerna/news-every-minute/my-app/src/utility/constant.js",[],"/home/prerna/news-every-minute/my-app/src/component/FilterComponent.js",["60","61"],"import { DateRangePicker } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nconst FilterComponent = ({ total, endDate, startDate, sortBy, handleFilter, ...props }) => {\n\n    const selectionRange = {\n        startDate,\n        endDate,\n        key: 'selection',\n        color: 'orange',\n        autofocus: false,\n    }\n\n    const handleSortChange = params => {\n        handleFilter({ 'sortBy': params.target.value });\n        params.preventDefault();\n        params.stopPropagation();\n    }\n    const handleDateButtonClick = params => {\n        props.setHideDate(!props.hideDate);\n        params.stopPropagation();\n    }\n    const handleSelect = ({ selection }) => {\n        const newFilter = { endDate, startDate };\n        if (startDate !== selection.startDate || endDate !== selection.endDate) {\n            newFilter.startDate = selection.startDate;\n            newFilter.endDate = selection.endDate;\n            handleFilter({ ...newFilter });\n        }\n    }\n\n    return (\n        <div className=\"filter\">\n            <div className=\"sort-order menu\">\n                Sort By:\n                <select name=\"sort\" onChange={handleSortChange} defaultValue={sortBy}>\n                    <option value=\"relevancy\">Relevant</option>\n                    <option value=\"popularity\">Popular</option>\n                    <option value=\"publishedAt\">Publish Date</option>\n                </select>\n            </div>\n            <div className=\"result-count menu\">\n                Total Number: {total}\n            </div>\n            <div className=\"calendar-wrapper menu\">\n                Date:\n                <button className=\"date-open\" type=\"click\" onClick={handleDateButtonClick}>\n                   {(props.hideDate && \n                     `${(selectionRange.startDate).toDateString()} to ${(selectionRange.endDate).toDateString()}`)\n                    ||'Close Calendar'     \n                   }\n                </button>\n                <DateRangePicker\n                    className={`calendar ${props.hideDate && 'hide' || ''}`}\n                    ranges={[selectionRange]}\n                    color=\"orange\"\n                    onChange={handleSelect}\n                    onShownDateChange={e=>{console.log(e,'te'); debugger}}\n                    inputRanges={[]}\n                    staticRanges={[]}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default FilterComponent;","/home/prerna/news-every-minute/my-app/src/component/NewsContentComponent.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":15,"column":7,"nodeType":"68","endLine":15,"endColumn":9,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":13,"column":57,"nodeType":"72","messageId":"73","endLine":13,"endColumn":59},{"ruleId":"66","severity":1,"message":"74","line":45,"column":7,"nodeType":"68","endLine":45,"endColumn":9,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"74","line":56,"column":7,"nodeType":"68","endLine":56,"endColumn":54,"suggestions":"76"},{"ruleId":"62","replacedBy":"77"},{"ruleId":"64","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":56,"column":59,"nodeType":"81","messageId":"82","endLine":56,"endColumn":61},{"ruleId":"79","severity":1,"message":"80","line":56,"column":69,"nodeType":"81","messageId":"82","endLine":56,"endColumn":71},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'displayClock'. Either include it or remove the dependency array.","ArrayExpression",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["86"],["87"],["83"],["84"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [displayClock]",{"range":"94","text":"95"},"Update the dependencies array to be: [getNews]",{"range":"96","text":"97"},"Update the dependencies array to be: [state.country, state.activeLink, state.filter, getNews]",{"range":"98","text":"99"},[557,559],"[displayClock]",[1388,1390],"[getNews]",[1764,1811],"[state.country, state.activeLink, state.filter, getNews]"]